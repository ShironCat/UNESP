|mainUla
iKEY[0] => registrador:reg1.iKEY[0]
iKEY[0] => registrador:reg2.iKEY[0]
iKEY[0] => registrador:reg3.iKEY[0]
iSW[0] => entrada1[0].DATAIN
iSW[0] => entrada2[0].DATAIN
iSW[1] => entrada1[1].DATAIN
iSW[1] => entrada2[1].DATAIN
iSW[2] => entrada1[2].DATAIN
iSW[2] => entrada2[2].DATAIN
iSW[3] => entrada1[3].DATAIN
iSW[3] => entrada2[3].DATAIN
iSW[4] => entrada2[0].IN0
iSW[4] => entrada1[1].IN0
iSW[5] => ULA4BITS:logicaritmetic.sel[0]
iSW[6] => ULA4BITS:logicaritmetic.sel[1]
iSW[7] => ULA4BITS:logicaritmetic.sel[2]
iSW[8] => entrada1[1].IN1
iSW[8] => entrada2[0].IN1
iSW[9] => registrador:reg1.iSW1
iSW[10] => registrador:reg2.iSW1
iSW[11] => registrador:reg3.iSW1
oHEX0_D[0] <= BinToHex4:ss0.oHEX0_D[0]
oHEX0_D[1] <= BinToHex4:ss0.oHEX0_D[1]
oHEX0_D[2] <= BinToHex4:ss0.oHEX0_D[2]
oHEX0_D[3] <= BinToHex4:ss0.oHEX0_D[3]
oHEX0_D[4] <= BinToHex4:ss0.oHEX0_D[4]
oHEX0_D[5] <= BinToHex4:ss0.oHEX0_D[5]
oHEX0_D[6] <= BinToHex4:ss0.oHEX0_D[6]
oHEX0_DP <= BinToHex4:ss0.oHEX0_DP
oHEX1_D[0] <= BinToHex4:ss1.oHEX0_D[0]
oHEX1_D[1] <= BinToHex4:ss1.oHEX0_D[1]
oHEX1_D[2] <= BinToHex4:ss1.oHEX0_D[2]
oHEX1_D[3] <= BinToHex4:ss1.oHEX0_D[3]
oHEX1_D[4] <= BinToHex4:ss1.oHEX0_D[4]
oHEX1_D[5] <= BinToHex4:ss1.oHEX0_D[5]
oHEX1_D[6] <= BinToHex4:ss1.oHEX0_D[6]
oHEX1_DP <= BinToHex4:ss1.oHEX0_DP
oHEX2_D[0] <= BinToHex4:ss2.oHEX0_D[0]
oHEX2_D[1] <= BinToHex4:ss2.oHEX0_D[1]
oHEX2_D[2] <= BinToHex4:ss2.oHEX0_D[2]
oHEX2_D[3] <= BinToHex4:ss2.oHEX0_D[3]
oHEX2_D[4] <= BinToHex4:ss2.oHEX0_D[4]
oHEX2_D[5] <= BinToHex4:ss2.oHEX0_D[5]
oHEX2_D[6] <= BinToHex4:ss2.oHEX0_D[6]
oHEX2_DP <= BinToHex4:ss2.oHEX0_DP
oLEDR[0] <= comb.DB_MAX_OUTPUT_PORT_TYPE
oLEDR[1] <= oLEDR[1].DB_MAX_OUTPUT_PORT_TYPE
oLEDR[2] <= oLEDR[2].DB_MAX_OUTPUT_PORT_TYPE
oLEDR[3] <= oLEDR[3].DB_MAX_OUTPUT_PORT_TYPE
oLEDR[4] <= oLEDR[4].DB_MAX_OUTPUT_PORT_TYPE
oLEDR[5] <= oLEDR[5].DB_MAX_OUTPUT_PORT_TYPE
oLEDR[6] <= oLEDR[6].DB_MAX_OUTPUT_PORT_TYPE
oLEDR[7] <= oLEDR[7].DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg1
iSW[0] => flipflop:bit0.I
iSW[1] => flipflop:bit1.I
iSW[2] => flipflop:bit2.I
iSW[3] => flipflop:bit3.I
iSW1 => flipflop:bit0.enable
iSW1 => flipflop:bit1.enable
iSW1 => flipflop:bit2.enable
iSW1 => flipflop:bit3.enable
iKEY[0] => flipflop:bit0.clk
iKEY[0] => flipflop:bit1.clk
iKEY[0] => flipflop:bit2.clk
iKEY[0] => flipflop:bit3.clk
oSW[0] <= flipflop:bit0.O
oSW[1] <= flipflop:bit1.O
oSW[2] <= flipflop:bit2.O
oSW[3] <= flipflop:bit3.O


|mainUla|registrador:reg1|flipflop:bit0
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg1|flipflop:bit1
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg1|flipflop:bit2
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg1|flipflop:bit3
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg2
iSW[0] => flipflop:bit0.I
iSW[1] => flipflop:bit1.I
iSW[2] => flipflop:bit2.I
iSW[3] => flipflop:bit3.I
iSW1 => flipflop:bit0.enable
iSW1 => flipflop:bit1.enable
iSW1 => flipflop:bit2.enable
iSW1 => flipflop:bit3.enable
iKEY[0] => flipflop:bit0.clk
iKEY[0] => flipflop:bit1.clk
iKEY[0] => flipflop:bit2.clk
iKEY[0] => flipflop:bit3.clk
oSW[0] <= flipflop:bit0.O
oSW[1] <= flipflop:bit1.O
oSW[2] <= flipflop:bit2.O
oSW[3] <= flipflop:bit3.O


|mainUla|registrador:reg2|flipflop:bit0
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg2|flipflop:bit1
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg2|flipflop:bit2
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg2|flipflop:bit3
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|ULA4BITS:logicaritmetic
A[0] => Add0.IN4
A[0] => Add1.IN8
A[0] => o.IN0
A[0] => o.IN0
A[0] => o.IN0
A[0] => Mux0.IN6
A[1] => Add0.IN3
A[1] => Add1.IN7
A[1] => o.IN0
A[1] => o.IN0
A[1] => o.IN0
A[1] => Mux1.IN6
A[2] => Add0.IN2
A[2] => Add1.IN6
A[2] => o.IN0
A[2] => o.IN0
A[2] => o.IN0
A[2] => Mux2.IN6
A[3] => Add0.IN1
A[3] => Add1.IN5
A[3] => o.IN0
A[3] => o.IN0
A[3] => o.IN0
A[3] => Mux3.IN5
B[0] => Add0.IN8
B[0] => o.IN1
B[0] => o.IN1
B[0] => o.IN1
B[0] => Add1.IN3
B[0] => Mux0.IN1
B[1] => Add0.IN7
B[1] => o.IN1
B[1] => o.IN1
B[1] => o.IN1
B[1] => Add1.IN2
B[1] => Mux1.IN1
B[2] => Add0.IN6
B[2] => o.IN1
B[2] => o.IN1
B[2] => o.IN1
B[2] => Add1.IN1
B[2] => Mux2.IN1
B[3] => Add0.IN5
B[3] => o.IN1
B[3] => o.IN1
B[3] => o.IN1
B[3] => Mux3.IN6
B[3] => Add1.IN4
o[0] <= o[0].DB_MAX_OUTPUT_PORT_TYPE
o[1] <= o[1].DB_MAX_OUTPUT_PORT_TYPE
o[2] <= o[2].DB_MAX_OUTPUT_PORT_TYPE
o[3] <= o[3].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => Mux0.IN10
sel[0] => Mux1.IN10
sel[0] => Mux2.IN10
sel[0] => Mux3.IN10
sel[0] => Mux4.IN10
sel[1] => Mux0.IN9
sel[1] => Mux1.IN9
sel[1] => Mux2.IN9
sel[1] => Mux3.IN9
sel[1] => Mux4.IN9
sel[2] => Mux0.IN8
sel[2] => Mux1.IN8
sel[2] => Mux2.IN8
sel[2] => Mux3.IN8
sel[2] => Mux4.IN8


|mainUla|registrador:reg3
iSW[0] => flipflop:bit0.I
iSW[1] => flipflop:bit1.I
iSW[2] => flipflop:bit2.I
iSW[3] => flipflop:bit3.I
iSW1 => flipflop:bit0.enable
iSW1 => flipflop:bit1.enable
iSW1 => flipflop:bit2.enable
iSW1 => flipflop:bit3.enable
iKEY[0] => flipflop:bit0.clk
iKEY[0] => flipflop:bit1.clk
iKEY[0] => flipflop:bit2.clk
iKEY[0] => flipflop:bit3.clk
oSW[0] <= flipflop:bit0.O
oSW[1] <= flipflop:bit1.O
oSW[2] <= flipflop:bit2.O
oSW[3] <= flipflop:bit3.O


|mainUla|registrador:reg3|flipflop:bit0
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg3|flipflop:bit1
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg3|flipflop:bit2
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|registrador:reg3|flipflop:bit3
I => Q.DATAIN
clk => Q.CLK
enable => Q.ENA
O <= Q.DB_MAX_OUTPUT_PORT_TYPE


|mainUla|BinToHex4:ss0
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN0
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN0
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
oHEX0_D[0] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[1] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[2] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[3] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[4] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[5] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[6] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_DP <= <VCC>


|mainUla|BinToHex4:ss1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN0
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN0
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
oHEX0_D[0] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[1] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[2] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[3] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[4] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[5] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[6] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_DP <= <VCC>


|mainUla|BinToHex4:ss2
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN0
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[0] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN1
iSW[1] => oHEX0_D.IN0
iSW[1] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN0
iSW[2] => oHEX0_D.IN1
iSW[2] => oHEX0_D.IN0
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
iSW[3] => oHEX0_D.IN1
oHEX0_D[0] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[1] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[2] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[3] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[4] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[5] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_D[6] <= oHEX0_D.DB_MAX_OUTPUT_PORT_TYPE
oHEX0_DP <= <VCC>


